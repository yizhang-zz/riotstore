#!/bin/sh

# File names consists of the following parts:
# insertion seq: S|D|R
# insertion seq scale: number
# splitting strategy: M|B|R|S|T
# Batching method: NONE, FWF, ...
# Batch buffer size: number

if test -z "$1"
then
	echo "Error: Provide result dir name as argument!"
	exit
fi

# Should allow dir to exist, in which case results are added to that dir
if [[ -f "$1" ]]
then
	echo "Error: There exists a file named '$1' !"
	exit
fi

mkdir -p $1

# whether to use dense leaf format
# read from $HOME/.riot conf file
useDense=`sed -n "s/useDenseLeaf=\([01]\)/\1/p" $HOME/.riot`
echo "useDense=$useDense is not used (hardcoded in the program)"
echo

for x in NONE #FWF LS LS_RAND LRU LG LG_RAND
do
	sed "s/\(batchMethod=\)\(.*\)/\1$x/g" $HOME/.riot > /tmp/.riot.tmp
	mv /tmp/.riot.tmp $HOME/.riot
    echo ">> .riot"
	cat $HOME/.riot
    echo "<<"
    echo

dir=/riot/10k.10/

# workload
for a in S D I
do
    # matrix size
	for b in 10000
	do
        # splitting strategy
		#for c in D M B
		#do

        #input=$a${b}A-1-$x
        #echo "Running with input $input read order R"
        #./read.stp -c "./read $dir$input.bin R" > $1/$input-R.log
        #input=$a${b}M-0-$x
        #echo "Running with input $input read order R"
        #./read.stp -c "./read $dir$input.bin R" > $1/$input-R.log
        input=$a${b}D-1-$x
        echo "Running with input $input read order R"
        ./read.stp -c "./read $dir$input.bin R" > $1/$input-R.log

		#done
	done
done
done
